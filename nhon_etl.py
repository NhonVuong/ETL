# -*- coding: utf-8 -*-
"""Nhon_ETL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XLU4jmJKL0LmtVzSj4TGSb27kMqRjQoK
"""

import pandas as pd
from sqlalchemy import create_engine
import pymysql

"""#1. Extract

##1.1. Enrollies' data
"""

link = 'https://docs.google.com/spreadsheets/d/1VCkHwBjJGRJ21asd9pxW4_0z2PWuKhbLR3gUHm-p4GI/edit?usp=sharing'
google_sheet_id = '1VCkHwBjJGRJ21asd9pxW4_0z2PWuKhbLR3gUHm-p4GI'
url='https://docs.google.com/spreadsheets/d/' + google_sheet_id + '/export?format=xlsx'

enrollies_df = pd.read_excel(url, sheet_name='enrollies')

enrollies_df.head()

"""##1.2. Enrollies' education"""

enrollies_edu_df = pd.read_excel('/content/enrollies_education.xlsx')

enrollies_edu_df.head()

"""##1.3. Enrollies' working experience"""

working_exp_df = pd.read_csv('/content/work_experience.csv')

working_exp_df.head()

"""##1.4. Training hours"""

!pip install pymysql

db_url = 'mysql+pymysql://etl_practice:550814@112.213.86.31:3360/company_course'
engine = create_engine(db_url)
tranning_hour_df = pd.read_sql_table('training_hours', engine)

tranning_hour_df.head()

pd.read_sql('SELECT * FROM training_hours', engine)

"""##1.5. City development index"""

page_url = 'https://sca-programming-school.github.io/city_development_index/index.html'
city_development_index_df = pd.read_html(page_url)[0]

city_development_index_df.head()

"""##1.6. Employment"""

employment_df = pd.read_sql_table('employment', engine)
employment_df.head()

"""#2. Transform

##Enrollies' data
"""

# Enrollies' data
enrollies_df.head()
# Fixing data type
enrollies_df['full_name'] = enrollies_df['full_name'].astype('string')
enrollies_df['city'] = enrollies_df['city'].astype('string')
enrollies_df['gender'] = enrollies_df['gender'].astype('category')
# Missing data
enrollies_df['gender'] = enrollies_df['gender'].fillna(enrollies_df['gender'].mode()[0])

enrollies_df.info()

"""##Enrollies' education"""

# Enrollies' education
enrollies_edu_df.head()

#Missing
enrollies_edu_df['enrolled_university'] = enrollies_edu_df['enrolled_university'].fillna('unknown')
enrollies_edu_df['major_discipline'] = enrollies_edu_df['major_discipline'].fillna('unknown')
enrollies_edu_df['education_level'] = enrollies_edu_df['education_level'].fillna('unknown')

# Fixing data type
enrollies_edu_df['education_level'] = enrollies_edu_df['education_level'].astype('category')
enrollies_edu_df['enrolled_university'] = enrollies_edu_df['enrolled_university'].astype('category')
enrollies_edu_df['major_discipline'] = enrollies_edu_df['major_discipline'].astype('category')

enrollies_edu_df.info()

"""##Enrollies' working experience"""

working_exp_df.head()

working_exp_df['experience'] = working_exp_df['experience'].fillna(working_exp_df['experience'].mode()[0])
working_exp_df['company_size'] = working_exp_df['company_size'].fillna('unknown')
working_exp_df['company_type'] = working_exp_df['company_type'].fillna('unknown')
working_exp_df['last_new_job'] = working_exp_df['last_new_job'].fillna('unknown')

cat_cols = ['relevent_experience', 'experience', 'company_size', 'company_type', 'last_new_job']
working_exp_df[cat_cols] = working_exp_df[cat_cols].astype('category')

working_exp_df.info()

"""##Training hours"""

tranning_hour_df.head()

tranning_hour_df.info()

"""##City development index"""

city_development_index_df.head()

city_development_index_df['City'] = city_development_index_df['City'].astype('string')

city_development_index_df.info()

"""##Employment"""

employment_df.head()

employment_df.info()

"""#3. Load"""

target_db_engine = create_engine('sqlite:///target_db.db')

employment_df.to_sql('Fect_Employment', target_db_engine, if_exists='replace', index=False)
city_development_index_df.to_sql('Dim_City', target_db_engine, if_exists='replace', index=False)
tranning_hour_df.to_sql('Dim_Training_Hours', target_db_engine, if_exists='replace', index=False)
working_exp_df.to_sql('Dim_Working_Experience', target_db_engine, if_exists='replace', index=False)
enrollies_edu_df.to_sql('Dim_Enrollies_Education', target_db_engine, if_exists='replace', index=False)
enrollies_df.to_sql('Dim_Enrollies', target_db_engine, if_exists='replace', index=False)